import { NextRequest, NextResponse } from 'next/server'; import { getStripe } from '@/lib/stripe'; import { getClient } from '@/lib/db'; import { requireUser } from '@/lib/auth.signed'; export async function GET(){ let userId:string; try{ const u=await requireUser(); userId=u.id; }catch{ return NextResponse.json({connected:false}); } const prisma=await getClient(); const stripe=getStripe(); const user=await (prisma as any).user.findUnique({ where:{ id:userId } }); if(!user?.stripeAccountId) return NextResponse.json({connected:false}); const acct=await stripe.accounts.retrieve(user.stripeAccountId); const payoutsEnabled=(acct as any).payouts_enabled; const chargesEnabled=(acct as any).charges_enabled; return NextResponse.json({ connected: payoutsEnabled && chargesEnabled, payoutsEnabled, chargesEnabled }); }
